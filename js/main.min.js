"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
/*! For license information please see main.js.LICENSE.txt */
!function () {
  "use strict";

  function t(e) {
    return t = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
      return _typeof(t);
    } : function (t) {
      return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
    }, t(e);
  }
  function e(t, e) {
    var i = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
      var n = Object.getOwnPropertySymbols(t);
      e && (n = n.filter(function (e) {
        return Object.getOwnPropertyDescriptor(t, e).enumerable;
      })), i.push.apply(i, n);
    }
    return i;
  }
  function i(t) {
    for (var i = 1; i < arguments.length; i++) {
      var o = null != arguments[i] ? arguments[i] : {};
      i % 2 ? e(Object(o), !0).forEach(function (e) {
        n(t, e, o[e]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(o)) : e(Object(o)).forEach(function (e) {
        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(o, e));
      });
    }
    return t;
  }
  function n(t, e, i) {
    return (e = l(e)) in t ? Object.defineProperty(t, e, {
      value: i,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }) : t[e] = i, t;
  }
  function o(t, e) {
    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
  }
  function r(t, e) {
    for (var i = 0; i < e.length; i++) {
      var n = e[i];
      n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, l(n.key), n);
    }
  }
  function s(t, e, i) {
    return e && r(t.prototype, e), i && r(t, i), Object.defineProperty(t, "prototype", {
      writable: !1
    }), t;
  }
  function l(e) {
    var i = function (e, i) {
      if ("object" !== t(e) || null === e) return e;
      var n = e[Symbol.toPrimitive];
      if (void 0 !== n) {
        var o = n.call(e, "string");
        if ("object" !== t(o)) return o;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return String(e);
    }(e);
    return "symbol" === t(i) ? i : String(i);
  }
  !function () {
    var t = {
        135: function _(t, e) {
          var i, n;
          i = function i(t, e) {
            function i(t, e) {
              if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }
            function n(t, e) {
              return e.indexOf(t) >= 0;
            }
            function o(t, e) {
              for (var i in e) {
                if (null == t[i]) {
                  var n = e[i];
                  t[i] = n;
                }
              }
              return t;
            }
            function r(t) {
              var e = !(arguments.length <= 1 || void 0 === arguments[1]) && arguments[1],
                i = !(arguments.length <= 2 || void 0 === arguments[2]) && arguments[2],
                n = arguments.length <= 3 || void 0 === arguments[3] ? null : arguments[3],
                o = void 0;
              return null != document.createEvent ? (o = document.createEvent("CustomEvent")).initCustomEvent(t, e, i, n) : null != document.createEventObject ? (o = document.createEventObject()).eventType = t : o.eventName = t, o;
            }
            function s(t, e, i) {
              null != t.addEventListener ? t.addEventListener(e, i, !1) : null != t.attachEvent ? t.attachEvent("on" + e, i) : t[e] = i;
            }
            function l(t, e, i) {
              null != t.removeEventListener ? t.removeEventListener(e, i, !1) : null != t.detachEvent ? t.detachEvent("on" + e, i) : delete t[e];
            }
            Object.defineProperty(e, "__esModule", {
              value: !0
            });
            var a,
              c,
              u = function () {
                function t(t, e) {
                  for (var i = 0; i < e.length; i++) {
                    var n = e[i];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
                  }
                }
                return function (e, i, n) {
                  return i && t(e.prototype, i), n && t(e, n), e;
                };
              }(),
              d = window.WeakMap || window.MozWeakMap || function () {
                function t() {
                  i(this, t), this.keys = [], this.values = [];
                }
                return u(t, [{
                  key: "get",
                  value: function value(t) {
                    for (var e = 0; e < this.keys.length; e++) {
                      if (this.keys[e] === t) return this.values[e];
                    }
                  }
                }, {
                  key: "set",
                  value: function value(t, e) {
                    for (var i = 0; i < this.keys.length; i++) {
                      if (this.keys[i] === t) return this.values[i] = e, this;
                    }
                    return this.keys.push(t), this.values.push(e), this;
                  }
                }]), t;
              }(),
              h = window.MutationObserver || window.WebkitMutationObserver || window.MozMutationObserver || (c = a = function () {
                function t() {
                  i(this, t), "undefined" != typeof console && null !== console && (console.warn("MutationObserver is not supported by your browser."), console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content."));
                }
                return u(t, [{
                  key: "observe",
                  value: function value() {}
                }]), t;
              }(), a.notSupported = !0, c),
              v = window.getComputedStyle || function (t) {
                var e = /(\-([a-z]){1})/g;
                return {
                  getPropertyValue: function getPropertyValue(i) {
                    "float" === i && (i = "styleFloat"), e.test(i) && i.replace(e, function (t, e) {
                      return e.toUpperCase();
                    });
                    var n = t.currentStyle;
                    return (null != n ? n[i] : void 0) || null;
                  }
                };
              },
              f = function () {
                function t() {
                  var e = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0];
                  i(this, t), this.defaults = {
                    boxClass: "wow",
                    animateClass: "animated",
                    offset: 0,
                    mobile: !0,
                    live: !0,
                    callback: null,
                    scrollContainer: null
                  }, this.animate = "requestAnimationFrame" in window ? function (t) {
                    return window.requestAnimationFrame(t);
                  } : function (t) {
                    return t();
                  }, this.vendors = ["moz", "webkit"], this.start = this.start.bind(this), this.resetAnimation = this.resetAnimation.bind(this), this.scrollHandler = this.scrollHandler.bind(this), this.scrollCallback = this.scrollCallback.bind(this), this.scrolled = !0, this.config = o(e, this.defaults), null != e.scrollContainer && (this.config.scrollContainer = document.querySelector(e.scrollContainer)), this.animationNameCache = new d(), this.wowEvent = r(this.config.boxClass);
                }
                return u(t, [{
                  key: "init",
                  value: function value() {
                    this.element = window.document.documentElement, n(document.readyState, ["interactive", "complete"]) ? this.start() : s(document, "DOMContentLoaded", this.start), this.finished = [];
                  }
                }, {
                  key: "start",
                  value: function value() {
                    var t = this;
                    if (this.stopped = !1, this.boxes = [].slice.call(this.element.querySelectorAll("." + this.config.boxClass)), this.all = this.boxes.slice(0), this.boxes.length) if (this.disabled()) this.resetStyle();else for (var e = 0; e < this.boxes.length; e++) {
                      var i = this.boxes[e];
                      this.applyStyle(i, !0);
                    }
                    if (this.disabled() || (s(this.config.scrollContainer || window, "scroll", this.scrollHandler), s(window, "resize", this.scrollHandler), this.interval = setInterval(this.scrollCallback, 50)), this.config.live) {
                      var n = new h(function (e) {
                        for (var i = 0; i < e.length; i++) {
                          for (var n = e[i], o = 0; o < n.addedNodes.length; o++) {
                            var r = n.addedNodes[o];
                            t.doSync(r);
                          }
                        }
                      });
                      n.observe(document.body, {
                        childList: !0,
                        subtree: !0
                      });
                    }
                  }
                }, {
                  key: "stop",
                  value: function value() {
                    this.stopped = !0, l(this.config.scrollContainer || window, "scroll", this.scrollHandler), l(window, "resize", this.scrollHandler), null != this.interval && clearInterval(this.interval);
                  }
                }, {
                  key: "sync",
                  value: function value() {
                    h.notSupported && this.doSync(this.element);
                  }
                }, {
                  key: "doSync",
                  value: function value(t) {
                    if (null != t || (t = this.element), 1 === t.nodeType) for (var e = (t = t.parentNode || t).querySelectorAll("." + this.config.boxClass), i = 0; i < e.length; i++) {
                      var o = e[i];
                      n(o, this.all) || (this.boxes.push(o), this.all.push(o), this.stopped || this.disabled() ? this.resetStyle() : this.applyStyle(o, !0), this.scrolled = !0);
                    }
                  }
                }, {
                  key: "show",
                  value: function value(t) {
                    return this.applyStyle(t), t.className = t.className + " " + this.config.animateClass, null != this.config.callback && this.config.callback(t), function (t, e) {
                      null != t.dispatchEvent ? t.dispatchEvent(e) : e in (null != t) ? t[e]() : "on" + e in (null != t) && t["on" + e]();
                    }(t, this.wowEvent), s(t, "animationend", this.resetAnimation), s(t, "oanimationend", this.resetAnimation), s(t, "webkitAnimationEnd", this.resetAnimation), s(t, "MSAnimationEnd", this.resetAnimation), t;
                  }
                }, {
                  key: "applyStyle",
                  value: function value(t, e) {
                    var i = this,
                      n = t.getAttribute("data-wow-duration"),
                      o = t.getAttribute("data-wow-delay"),
                      r = t.getAttribute("data-wow-iteration");
                    return this.animate(function () {
                      return i.customStyle(t, e, n, o, r);
                    });
                  }
                }, {
                  key: "resetStyle",
                  value: function value() {
                    for (var t = 0; t < this.boxes.length; t++) {
                      this.boxes[t].style.visibility = "visible";
                    }
                  }
                }, {
                  key: "resetAnimation",
                  value: function value(t) {
                    if (t.type.toLowerCase().indexOf("animationend") >= 0) {
                      var e = t.target || t.srcElement;
                      e.className = e.className.replace(this.config.animateClass, "").trim();
                    }
                  }
                }, {
                  key: "customStyle",
                  value: function value(t, e, i, n, o) {
                    return e && this.cacheAnimationName(t), t.style.visibility = e ? "hidden" : "visible", i && this.vendorSet(t.style, {
                      animationDuration: i
                    }), n && this.vendorSet(t.style, {
                      animationDelay: n
                    }), o && this.vendorSet(t.style, {
                      animationIterationCount: o
                    }), this.vendorSet(t.style, {
                      animationName: e ? "none" : this.cachedAnimationName(t)
                    }), t;
                  }
                }, {
                  key: "vendorSet",
                  value: function value(t, e) {
                    for (var i in e) {
                      if (e.hasOwnProperty(i)) {
                        var n = e[i];
                        t["" + i] = n;
                        for (var o = 0; o < this.vendors.length; o++) {
                          t["" + this.vendors[o] + i.charAt(0).toUpperCase() + i.substr(1)] = n;
                        }
                      }
                    }
                  }
                }, {
                  key: "vendorCSS",
                  value: function value(t, e) {
                    for (var i = v(t), n = i.getPropertyCSSValue(e), o = 0; o < this.vendors.length; o++) {
                      var r = this.vendors[o];
                      n = n || i.getPropertyCSSValue("-" + r + "-" + e);
                    }
                    return n;
                  }
                }, {
                  key: "animationName",
                  value: function value(t) {
                    var e = void 0;
                    try {
                      e = this.vendorCSS(t, "animation-name").cssText;
                    } catch (i) {
                      e = v(t).getPropertyValue("animation-name");
                    }
                    return "none" === e ? "" : e;
                  }
                }, {
                  key: "cacheAnimationName",
                  value: function value(t) {
                    return this.animationNameCache.set(t, this.animationName(t));
                  }
                }, {
                  key: "cachedAnimationName",
                  value: function value(t) {
                    return this.animationNameCache.get(t);
                  }
                }, {
                  key: "scrollHandler",
                  value: function value() {
                    this.scrolled = !0;
                  }
                }, {
                  key: "scrollCallback",
                  value: function value() {
                    if (this.scrolled) {
                      this.scrolled = !1;
                      for (var t = [], e = 0; e < this.boxes.length; e++) {
                        var i = this.boxes[e];
                        if (i) {
                          if (this.isVisible(i)) {
                            this.show(i);
                            continue;
                          }
                          t.push(i);
                        }
                      }
                      this.boxes = t, this.boxes.length || this.config.live || this.stop();
                    }
                  }
                }, {
                  key: "offsetTop",
                  value: function value(t) {
                    for (; void 0 === t.offsetTop;) {
                      t = t.parentNode;
                    }
                    for (var e = t.offsetTop; t.offsetParent;) {
                      e += (t = t.offsetParent).offsetTop;
                    }
                    return e;
                  }
                }, {
                  key: "isVisible",
                  value: function value(t) {
                    var e = t.getAttribute("data-wow-offset") || this.config.offset,
                      i = this.config.scrollContainer && this.config.scrollContainer.scrollTop || window.pageYOffset,
                      n = i + Math.min(this.element.clientHeight, "innerHeight" in window ? window.innerHeight : document.documentElement.clientHeight) - e,
                      o = this.offsetTop(t),
                      r = o + t.clientHeight;
                    return n >= o && r >= i;
                  }
                }, {
                  key: "disabled",
                  value: function value() {
                    return !this.config.mobile && function (t) {
                      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(t);
                    }(navigator.userAgent);
                  }
                }]), t;
              }();
            e.default = f, t.exports = e.default;
          }, void 0 === (n = i.apply(e, [t, e])) || (t.exports = n);
        }
      },
      e = {};
    function r(i) {
      var n = e[i];
      if (void 0 !== n) return n.exports;
      var o = e[i] = {
        exports: {}
      };
      return t[i].call(o.exports, o, o.exports, r), o.exports;
    }
    r.n = function (t) {
      var e = t && t.__esModule ? function () {
        return t.default;
      } : function () {
        return t;
      };
      return r.d(e, {
        a: e
      }), e;
    }, r.d = function (t, e) {
      for (var i in e) {
        r.o(e, i) && !r.o(t, i) && Object.defineProperty(t, i, {
          enumerable: !0,
          get: e[i]
        });
      }
    }, r.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }, function () {
      var t = document.querySelector(".burger__icon"),
        e = document.querySelectorAll(".header__menu__item");
      t.addEventListener("click", function () {
        t.classList.toggle("activeBurger"), document.querySelector(".header__menu").classList.toggle("activeBurger"), document.body.classList.toggle("blockScroll");
      }), e.forEach(function (e) {
        e.addEventListener("click", function () {
          t.classList.remove("activeBurger"), document.querySelector(".header__menu").classList.remove("activeBurger"), document.body.classList.remove("blockScroll");
        });
      }), window.addEventListener("resize", function () {
        window.innerWidth > 768 && (t.classList.remove("activeBurger"), document.querySelector(".header__menu").classList.remove("activeBurger"), document.body.classList.remove("blockScroll"));
      });
    }(), function () {
      var t = function () {
          function t(e) {
            o(this, t), this.listId = e;
          }
          return s(t, [{
            key: "init",
            value: function value() {
              var t = this;
              this.listId.forEach(function (e) {
                e.addEventListener("click", function (e) {
                  var i,
                    n = null === (i = e.target) || void 0 === i ? void 0 : i.getAttribute("id"),
                    o = document.querySelector(".popup#".concat(n));
                  t.open(o);
                });
              }), r.forEach(function (e) {
                e.addEventListener("click", function (e) {
                  var i,
                    n = null === (i = e.target) || void 0 === i ? void 0 : i.closest(".popup");
                  t.close(n);
                });
              });
            }
          }, {
            key: "open",
            value: function value(t) {
              t.classList.add("activePopup"), document.body.style.overflowY = "hidden", n.style.display = "block";
            }
          }, {
            key: "close",
            value: function value(t) {
              t.classList.remove("activePopup"), document.body.style.overflowY = "auto", n.style.display = "none", l(t, !0);
            }
          }]), t;
        }(),
        e = document.querySelectorAll(".cardInstructor__button"),
        i = document.querySelectorAll(".QandA__popularQuestions__button"),
        n = document.querySelector(".popup-fon"),
        r = document.querySelectorAll(".popup-close");
      new t(e).init(), new t(i).init(), n.addEventListener("click", function (t) {
        var e = document.querySelector(".popup.activePopup");
        e.classList.remove("activePopup"), document.body.style.overflowY = "auto", n.style.display = "none", l(e, !0);
      }), document.querySelector(".popupForm__button").addEventListener("click", function (t) {
        t.preventDefault(), l(document.querySelector(".popupForm"), !1);
      });
      var l = function l(t, e) {
        if (t.classList.contains("popupForm")) {
          var i = t.querySelector(".popupForm__wrapper"),
            n = t.querySelector(".popupForm__afterSendForm");
          i.style.display = e ? "block" : "none", n.style.display = e ? "none" : "flex";
        }
      };
    }(), new (function () {
      function t(e) {
        var r = this,
          s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        o(this, t), n(this, "checkActiveSlider", function () {
          var t, e;
          null !== (t = r.itemsSlider) && void 0 !== t && t.forEach(function (t) {
            t.classList.contains("activeSlider") && t.classList.remove("activeSlider");
          }), null === (e = r.itemsSlider[r.counter]) || void 0 === e || e.classList.add("activeSlider");
        }), this.root = document.querySelector("".concat(e)), this.config = i({
          speed: ".4",
          slidersView: 1,
          centralSlider: !1
        }, s);
      }
      return s(t, [{
        key: "clear",
        value: function value() {
          this.root = null;
        }
      }, {
        key: "autoPlay",
        value: function value() {
          var t = this;
          this.timer = setInterval(function () {
            t.moveNext();
          }, 1e3 * this.config.timeout), this.autoplayHandler("mouseenter", "mouseleave"), this.autoplayHandler("touchstart", "touchend");
        }
      }, {
        key: "autoplayHandler",
        value: function value(t, e) {
          var i = this;
          this.root.addEventListener(t, function () {
            clearInterval(i.timer), i.counter == i.itemsSlider.length - 1 && clearTimeout(i.timerLastItem);
          }), this.root.addEventListener(e, function () {
            i.timer = setInterval(function () {
              i.moveNext();
            }, 1e3 * i.config.timeout), i.counter == i.itemsSlider.length - 1 && (i.timerLastItem = setTimeout(function () {
              i.autoplayRestart();
            }, 1e3 * i.config.timeout));
          });
        }
      }, {
        key: "moveNext",
        value: function value() {
          var t = this;
          this.x - this.shiftX < -this.shiftX * (this.itemsSlider.length - this.config.slidersView) || (this.counter += 1, this.x -= this.shiftX, this.track.style.transform = "translateX(".concat(this.x, "px)"), this.checkActiveSlider(), this.setActiveAutoplayDots(), this.counter === this.itemsSlider.length - 1 && (this.timerLastItem = setTimeout(function () {
            t.autoplayRestart();
          }, 1e3 * this.config.timeout)));
        }
      }, {
        key: "autoplayRestart",
        value: function value() {
          var t = this;
          new Promise(function (e, i) {
            setTimeout(function () {
              t.track.style.transition = "none", t.track.style.transform = "translateX(0px)", e();
            }, 1e3 * t.config.timeout);
          }).then(function () {
            setTimeout(function () {
              t.track.style.transition = "".concat(t.config.speed, "s ease-in-out");
            }, 100);
          }).then(function () {
            t.counter = 0, t.x = 0, t.checkActiveSlider(), t.setActiveAutoplayDots();
          }).catch(function (t) {
            return console.log(t);
          });
        }
      }, {
        key: "sliderRestart",
        value: function value() {
          this.counter = 0, this.x = 0, this.track.style.transform = "translateX(".concat(this.x, "px)"), this.checkActiveSlider(), this.setActiveAutoplayDots();
        }
      }, {
        key: "movePrev",
        value: function value() {
          this.x + this.shiftX > 0 || (this.counter -= 1, this.x += this.shiftX, this.track.style.transform = "translateX(".concat(this.x, "px)"), this.checkActiveSlider(), this.setActiveAutoplayDots());
        }
      }, {
        key: "setActiveAutoplayDots",
        value: function value() {
          var t = Array.from(this.dots.children);
          t.forEach(function (t) {
            t.classList.remove("activeDot");
          }), t[this.counter].classList.add("activeDot");
        }
      }, {
        key: "checkCounter",
        value: function value() {
          var t, e, i, n;
          this.counter === this.itemsSlider.length - 1 && (null !== (t = this.arrowNext) && void 0 !== t && t.classList.remove("activeBtn"), null !== (e = this.arrowPrev) && void 0 !== e && e.classList.add("activeBtn"), this.nextBtn.disabled = !0), this.prevBtn.disabled && (this.prevBtn.disabled = !1), 0 === this.counter && (null !== (i = this.arrowNext) && void 0 !== i && i.classList.add("activeBtn"), null !== (n = this.arrowPrev) && void 0 !== n && n.classList.remove("activeBtn"), this.prevBtn.disabled = !0), this.nextBtn.disabled && (this.nextBtn.disabled = !1);
        }
      }, {
        key: "checkResizeMobile",
        value: function value() {
          return console.log(this.widthWindow, window.innerWidth), window.innerWidth === this.widthWindow || (this.widthWindow = window.innerWidth, !1);
        }
      }, {
        key: "initSlider",
        value: function value() {
          var t,
            e,
            i,
            n,
            o,
            r,
            s,
            l,
            a,
            c,
            u,
            d,
            h = this;
          if (this.x = 0, this.counter = 0, this.widthWindow = window.innerWidth, this.track = null === (t = this.root) || void 0 === t ? void 0 : t.querySelector(".trackSlider"), this.wrapper = null === (e = this.root) || void 0 === e ? void 0 : e.querySelector(".wrapperSlider"), this.itemsSlider = null === (i = this.root) || void 0 === i ? void 0 : i.querySelectorAll(".elementSlider"), this.nav = null === (n = this.root) || void 0 === n ? void 0 : n.querySelector(".navigationSlider"), this.prevBtn = null === (o = this.nav) || void 0 === o ? void 0 : o.querySelector(".prevBtn"), this.nextBtn = null === (r = this.nav) || void 0 === r ? void 0 : r.querySelector(".nextBtn"), this.arrowPrev = null == this || null === (s = this.prevBtn) || void 0 === s ? void 0 : s.querySelector(".arrowBtnPrev"), this.arrowNext = null == this || null === (l = this.nextBtn) || void 0 === l ? void 0 : l.querySelector(".arrowBtnNext"), null !== (a = this.arrowNext) && void 0 !== a && a.classList.add("activeBtn"), this.dots = null === (c = this.root) || void 0 === c ? void 0 : c.querySelector(".dotsSlider"), this.itemsSlider && (this.shiftX = null === (u = this.itemsSlider[0]) || void 0 === u ? void 0 : u.clientWidth, null !== (d = this.itemsSlider[0]) && void 0 !== d && d.classList.add("activeSlider"), this.config.counter && this.itemsSlider.forEach(function (t, e) {
            t.querySelector(".guide__counter").innerHTML = e + 1 > 9 ? e + 1 : "0" + (e + 1);
          })), this.resizeSlider = window.addEventListener("resize", function (t) {
            var e;
            h.config.autoplay && (window.innerWidth < 1200 && removeEventListener("resize", h.resizeSlider), h.sliderRestart()), h.shiftX = null === (e = h.itemsSlider[0]) || void 0 === e ? void 0 : e.clientWidth;
          }), this.track && (this.track.style.transition = "".concat(this.config.speed, "s ease-in-out")), this.config.autoplay && this.autoPlay(), this.config.dots) {
            for (var v = 0; v < this.itemsSlider.length; v++) {
              var f = document.createElement("div");
              f.classList.add("dot"), this.dots.append(f);
            }
            this.dots.children[0].classList.add("activeDot"), this.dots.addEventListener("click", function (t) {
              t.target.classList.contains("dot") && (h.dots.querySelectorAll(".dot").forEach(function (e, i) {
                e.classList.remove("activeDot"), t.target === e && (h.counter = i, h.x = -h.shiftX * h.counter, h.track.style.transform = "translateX(".concat(h.x, "px)"), h.itemsSlider.forEach(function (t) {
                  return t.classList.remove("activeSlider");
                }), h.itemsSlider[h.counter].classList.add("activeSlider"));
              }), t.target.classList.add("activeDot"), clearTimeout(h.timerLastItem));
            });
          }
          this.prevBtn && this.nextBtn && (this.prevBtn.onclick = function () {
            h.movePrev(h.counter), h.checkCounter();
          }, this.nextBtn.onclick = function () {
            h.moveNext(h.counter), h.checkCounter();
          });
        }
      }]), t;
    }())(".slider", {
      slidersView: 1,
      speed: .6,
      counter: !1,
      dots: !0,
      autoplay: !0,
      timeout: 5
    }).initSlider(), document.querySelector(".tabs").addEventListener("click", function (t) {
      var e, i, n;
      if (null !== (e = t.target) && void 0 !== e && e.classList.contains("tabs__item")) {
        null === (i = t.target) || void 0 === i || i.classList.toggle("activeTab");
        var o = null === (n = t.target) || void 0 === n ? void 0 : n.querySelector(".tabs__item__cross");
        null == o || o.classList.toggle("activeCross");
      }
    }), function () {
      var t = r(135);
      new (r.n(t)())().init();
    }();
  }();
}();
/*! For license information please see main.js.LICENSE.txt */